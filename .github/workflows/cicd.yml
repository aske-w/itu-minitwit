name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # build:
  #   name: "Build and push"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout branch
  #       uses: actions/checkout@v2

  #     - name: Login to Dockerhub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push api docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest . -f ./server/Dockerfile
  #         docker push ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest

  #     - name: Build and push client docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKER_USERNAME }}/minitwit-client:latest . -f ./client/Dockerfile
  #         docker push ${{ secrets.DOCKER_USERNAME }}/minitwit-client:latest

  # scan:
  #   name: "Scan the container"
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: Azure/container-scan@v0
  #       with:
  #         image-name: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  copy:
    name: "Copy docker-compose file"
    # needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        port: 22
        strip_components: 2
        source: "./remote_files/docker-compose.yml, ./filebeat/filebeat.yml"
        target: "/vagrant"

  deploy:
    name: "Deploy to droplet"
    needs: copy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.4
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ADDRESS: ${{ secrets.MYSQL_ADDRESS }}
          MYSQL_PORT: 25060
          GRAFANA_ADMIN_USERNAME: ${{ secrets.GRAFANA_ADMIN_USERNAME }}
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
          ELK_USER: ${{ secrets.ELK_USER }}
          ELASTIC_USER: ${{ secrets.ELASTIC_USER }}
          ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: 22
          envs: DOCKER_USERNAME,MYSQL_USER,MYSQL_DATABASE,MYSQL_PASSWORD,MYSQL_ADDRESS,MYSQL_PORT,GRAFANA_ADMIN_USERNAME,GRAFANA_ADMIN_PASSWORD,ELK_USER,ELASTIC_USER,ELASTIC_PASSWORD

          script: |
            cd /vagrant

            export DOCKER_USERNAME=$DOCKER_USERNAME
            export MYSQL_USER=$MYSQL_USER
            export MYSQL_DATABASE=$MYSQL_DATABASE
            export MYSQL_PASSWORD=$MYSQL_PASSWORD
            export MYSQL_ADDRESS=$MYSQL_ADDRESS
            export MYSQL_PORT=$MYSQL_PORT
            export GRAFANA_ADMIN_USERNAME=$GRAFANA_ADMIN_USERNAME
            export GRAFANA_ADMIN_PASSWORD=$GRAFANA_ADMIN_PASSWORD
            export ELK_USER=$ELK_USER
            export ELASTIC_USER=$ELASTIC_USER
            export ELASTIC_PASSWORD=$ELASTIC_PASSWORD

            docker-compose pull
            docker-compose up -d

  versioning:
    name: "Tag and release"
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: major
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}